[build-system]
requires = ["setuptools>=60", "setuptools-scm>=8.0"]

[project]
name = "oper8"
dynamic = ["version"]
description = "Python-native Kubernetes operator framework for managing trees of components"
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.9"
classifiers=[
    "License :: OSI Approved :: Apache Software License"
]

dependencies = [
    "alchemy-config>=1.0.0,<2",
    "alchemy-logging>=1.0.1,<2",
    "openshift>=0.13.1,<0.14",
    "python-dateutil>=2.8.1,<3",
    "deepdiff>=5.0.2,<6",
    "jsonpatch>=1.26,<2",
    "semver>=2.13.0,<3",
    "kubernetes>=25.3.0,<26",
    "pygit2>=1.12.0,<2",
]

[project.scripts]

oper8 = "oper8.__main__:main"

[project.optional-dependencies]

## User Extra Sets ##

ansible = [
    "ansible-core>=2.9.13,<2.16",
]

cdk8s = [
    "cdk8s<1",
]

test-helpers = [
    "pytest>=6",
]

# NOTE: This is "all" from the user perspective, not the dev perspective
all = [
    "oper8[ansible, cdk8s, test-helpers]",
]

## Dev Extra Sets ##

dev-test = [
    "pytest>=6",
    "pytest-cov>=2.10.1",
    "pytest-timeout>=2.1.0,<3",
    "dill>=0.3.4,<0.4",
    "snapshottest>=0.6.0,<0.7.0",
    "Flask>=2.3,<3",
]

dev-test-ansible = [
    # This will isntall the k8s extension module needed to actually run
    "ansible==2.9",
]

dev-docs = [
    "sphinx>=4.0.2,<8.0",
    "sphinx-autoapi>=2.1.0",
    "sphinx-rtd-theme>=1.2.1,<1.4.0",
]

dev-fmt = [
    "pre-commit>=3.0.4,<4.0",
    "ruff==0.1.5",
]

dev-build = [
    "setuptools>=60",
    "setuptools-scm>=8.0",
]

# NOTE: This is "all" from the user and dev perspective
all-dev = [
    "oper8[all, dev-test, dev-test-ansible, dev-docs, dev-fmt, dev-build]"
]

[project.urls]
Source = "https://github.com/IBM/oper8"


[tool.setuptools.packages.find]
where = [""]
include = ["caikit", "caikit*"]

[tool.setuptools_scm]
write_to = "oper8/_version.py"

[tool.pytest.ini_options]
markers = [
    "ansible: marks tests that depend on ansible",
]


[tool.ruff]
line-length = 100
target-version = "py38"
exclude = ["caikit/runtime/protobufs/*.py"]


[tool.ruff.lint]
select = [ "E", "F", "UP", "B", "SIM", "I"]
ignore = [
    "UP032", # f-string
    "UP034", # extraneous-parentheses
    # "UP035", # deprecated-import

    ## original errors fromt pylint
    "F403", # unable to detect undefined names
    "I001", # import block unsorted/unformatted
    "E402", # module level import not at top of file
    # "B028", # warnings: no explicit stacklevel keyword argument found
    # "I0001", # raw-checker-failed
    # "I0010", # bad-inline-option
    # "I0011", # locally-disabled
    # "I0013", # file-ignored
    # "I0020", # suppressed-message
    # "I0021", # useless-suppression
    # "I0022", # deprecated-pragma

    ## added messages in caikit
    # "I0023", # use-symbolic-message-instead
    # "C0103", # invalid-name
    # "C0115", # missing-class-docstring
    # "C0114", # missing-module-docstring
    # "C0116", # missing-function-docstring
    # "C0209", # consider-using-f-string
    # "R1710", # inconsistent-return-statements
    # "E1101", # no-member
    # "R0913", # too-many-arguments
    # "R0914", # too-many-locals
    # "R0912", # too-many-branches
    # "R0915", # too-many-statements
    # "R0401", # cyclic-import
    # "R0903", # too-few-public-methods
    # "W0212", # protected-access
    # "W0511", # fixme
    # "W1202", # logging-format-interpolation
    # "E1205", # logging-too-many-args
    # "W0201", # attribute-defined-outside-init
    # "W0223", # abstract-method
    # "W0104", # pointless-statement
    # "C0411", # wrong-import-order
]

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401", # imported but unused
    "F403" # unable to detect undefined names
]